class LinearRegressionDemo{constructor(){this.competitionMode=!1,this.competitionUsername=null,this.scoreUpdateTimeout=null,this.canvas=document.getElementById("plot"),this.ctx=this.canvas.getContext("2d"),this.alphaSlider=document.getElementById("alpha"),this.betaSlider=document.getElementById("beta"),this.alphaValue=document.getElementById("alpha-value"),this.betaValue=document.getElementById("beta-value"),this.equation=document.getElementById("equation"),this.mseDisplay=document.getElementById("mse"),this.maeDisplay=document.getElementById("mae"),this.r2Display=document.getElementById("r2"),this.solutionBtn=document.getElementById("solution-btn"),this.generateDataBtn=document.getElementById("generate-data-btn"),this.clearDataBtn=document.getElementById("clear-data-btn"),this.showSquaresCheckbox=document.getElementById("show-squares"),this.showConfidenceCheckbox=document.getElementById("show-confidence"),this.structuresBtn=document.getElementById("structures-btn"),this.geotechBtn=document.getElementById("geotech-btn"),this.transportBtn=document.getElementById("transport-btn"),this.environmentBtn=document.getElementById("environment-btn");const t="transport-systems.imperial.ac.uk"===window.location.hostname,e=t?"https://tsl-leaderboard-6fe23a1f7285.herokuapp.com":"http://localhost:3001";console.log(`🌐 Leaderboard server: ${e} (${t?"production":"local"})`),this.leaderboard=new LeaderboardClient({serverUrl:e,roomId:"lec02a_linear-regression",autoConnect:!0,debug:!0,roomConfig:{display:"Linear Regression Challenge",metrics:["r2","mse"],sortBy:"r2",order:"desc",description:"Achieve the highest R² score on the linear regression demo",maxUsers:200,sessionTimeout:6e5},onConnect:()=>{this.leaderboard.updateStatus("Connected to leaderboard","connected"),this.competitionMode&&(document.getElementById("leaderboard-panel").style.display="block")},onDisconnect:()=>{this.leaderboard.updateStatus("Disconnected","disconnected")},onLeaderboardUpdate:t=>{this.leaderboard.updateLeaderboard(t),this.leaderboard.updateUserPositionFromLeaderboard(t)},onPositionUpdate:t=>{this.leaderboard.updateUserPosition(t)},onError:t=>{this.leaderboard.updateStatus("Connection error","disconnected")},onStatusChange:t=>{"error"===t?this.leaderboard.updateStatus("Server unavailable","disconnected"):"joined"===t&&this.leaderboard.updateStatus("Competition active","connected")},onUsernameAssigned:t=>{this.competitionUsername=t,document.getElementById("competition-username").textContent=t}}),this.setupTabs(),this.setupHighDPICanvas(),this.plotWidth=this.displayWidth-90,this.plotHeight=this.displayHeight-80,this.plotX=50,this.plotY=40,this.xMin=-10,this.xMax=10,this.yMin=-100,this.yMax=100,this.xLabel="X",this.yLabel="Y",this.datasets={structures:{name:"Structures - Concrete Strength",file:"example-data/structures_concrete.csv",xLabel:"Cement (kg/m³)",yLabel:"Compressive Strength (MPa)",xColumn:"Cement_kg_per_m3",yColumn:"Compressive_Strength_MPa",title:"Structures: Concrete Strength",description:"This dataset shows how increasing cement content tends to increase concrete strength. The data comes from concrete compressive strength measurements.",variables:"Variables: Cement content (kg/m³) vs Compressive strength (MPa)"},geotech:{name:"Geotechnics - Soil Properties",file:"example-data/geotechnics_soil.csv",xLabel:"Sand Content (%)",yLabel:"Uniformity Coefficient",xColumn:"Sand_Percent",yColumn:"Uniformity_Coefficient",title:"Geotechnics: Soil Properties",description:"This dataset explores how soil composition relates to gradation properties. It demonstrates the relationship between sand percentage and uniformity coefficient in soil samples.",variables:"Variables: Sand percentage (%) vs Uniformity coefficient (measure of soil gradation)"},transport:{name:"Transport - Traffic Flow",file:"example-data/transport_traffic.csv",xLabel:"Vehicle Count",yLabel:"Vehicle Speed (km/h)",xColumn:"Vehicle_Count",yColumn:"Vehicle_Speed_kmh",title:"Transport: Urban Traffic Flow",description:"This dataset shows the negative relationship between vehicle count and speed, demonstrating traffic congestion effects in urban environments.",variables:"Variables: Number of vehicles detected vs Average vehicle speed (km/h)"},environment:{name:"Environment - Wastewater Energy",file:"example-data/environment_wastewater.csv",xLabel:"Inflow (m³/s)",yLabel:"Energy Consumption (MWh)",xColumn:"Inflow_m3_s",yColumn:"Energy_Consumption_MWh",title:"Environment: Wastewater Treatment",description:"This dataset explores how higher inflow rates are associated with greater energy use in wastewater treatment plants, showing the energy demands of processing larger volumes.",variables:"Variables: Average daily inflow (m³/s) vs Daily energy consumption (MWh)"}},this.generateDataPoints(),this.setupEventListeners(),this.initializeDisplay()}generateDataPoints(){this.dataPoints=[];const t=14*(Math.random()-.5),e=40*(Math.random()-.5);for(let a=0;a<10;a++){const a=18*(Math.random()-.5),i=t*a+e+25*(Math.random()-.5)*2;this.dataPoints.push({x:a,y:i})}}setupHighDPICanvas(){const t=window.devicePixelRatio||1,e=this.canvas.clientWidth||600,a=this.canvas.clientHeight||400;this.canvas.width=e*t,this.canvas.height=a*t,this.canvas.style.width=e+"px",this.canvas.style.height=a+"px",this.ctx.scale(t,t),this.ctx.imageSmoothingEnabled=!0,this.ctx.imageSmoothingQuality="high",this.dpr=t,this.displayWidth=e,this.displayHeight=a}setupTabs(){const t=document.querySelectorAll(".tab-btn"),e=document.querySelectorAll(".tab-panel"),a=a=>{t.forEach(t=>t.classList.remove("active")),e.forEach(t=>t.classList.remove("active"));const i=document.querySelector(`[data-tab="${a}"]`),s=document.getElementById(a);if(i&&s){i.classList.add("active"),s.classList.add("active"),window.location.hash=a;try{window.parent&&window.parent!==window&&(window.parent.location.hash=`linear-regression|${a}`)}catch(t){}"compete"===a?this.enterCompetitionMode():this.exitCompetitionMode()}};t.forEach(t=>{t.addEventListener("click",()=>{const e=t.getAttribute("data-tab");a(e)})});const i=()=>{let t=window.location.hash.substring(1);if(!t)try{if(window.parent&&window.parent!==window&&window.parent.location.hash){const e=window.parent.location.hash.substring(1);e.includes("|")&&e.startsWith("linear-regression|")&&(t=e.split("|")[1])}}catch(t){}t&&["introduction","instructions","challenges","compete","tips"].includes(t)?a(t):a("introduction")};window.addEventListener("hashchange",i),setTimeout(()=>{i()},100)}seededRandom(t){const e=1e4*Math.sin(t);return e-Math.floor(e)}generateCompetitionDataset(){this.dataPoints=[];const t=12345;for(let e=0;e<24;e++){const a=20*(this.seededRandom(t+3*e)-.5),i=2.8*a+12+(50*(this.seededRandom(t+3*e+1)-.5)+30*(this.seededRandom(t+3*e+2)-.5)*Math.sin(.8*e));this.dataPoints.push({x:a,y:i})}this.draw()}randomizeParameters(){const t=Math.floor(151*Math.random())-50;this.alphaSlider.value=t;const e=(20*Math.random()-5).toFixed(1);this.betaSlider.value=e,this.updateDisplay(),this.draw()}enterCompetitionMode(){this.competitionMode=!0,this.generateCompetitionDataset(),this.randomizeParameters(),document.getElementById("solution-btn").style.display="none",document.getElementById("generate-data-btn").style.display="none",document.getElementById("clear-data-btn").style.display="none",document.querySelector(".dataset-buttons-section").style.display="none",document.getElementById("leaderboard-panel").style.display="block",document.getElementById("competition-username").textContent="Generating...",this.leaderboard.setUserId("generate-username"),this.leaderboard.join(),setTimeout(()=>{this.sendScoreUpdate()},1e3)}exitCompetitionMode(){this.competitionMode&&(this.competitionMode=!1,document.getElementById("solution-btn").style.display="block",document.getElementById("generate-data-btn").style.display="block",document.getElementById("clear-data-btn").style.display="block",document.querySelector(".dataset-buttons-section").style.display="block",document.getElementById("leaderboard-panel").style.display="none",this.leaderboard.leave(),console.log("Exited competition mode"))}sendScoreUpdate(){if(!this.leaderboard.isReady())return;const t=parseFloat(this.alphaSlider.value),e=parseFloat(this.betaSlider.value),a=this.calculateR2(t,e),i=this.calculateMSE(t,e),s={r2:Math.round(1e3*a)/1e3,mse:Math.round(100*i)/100};this.leaderboard.updateScores(s)}debouncedScoreUpdate(){this.competitionMode&&(this.scoreUpdateTimeout&&clearTimeout(this.scoreUpdateTimeout),this.scoreUpdateTimeout=setTimeout(()=>{this.sendScoreUpdate()},100))}initializeDisplay(){this.draw(),this.updateDisplayPlainText(),window.MathJax&&(MathJax.startup&&MathJax.startup.promise?MathJax.startup.promise.then(()=>{this.updateDisplay()}).catch(()=>{console.warn("MathJax failed to load, using plain text equations")}):setTimeout(()=>{this.updateDisplay()},100))}updateDisplayPlainText(){const t=parseFloat(this.alphaSlider.value),e=parseFloat(this.betaSlider.value);this.alphaValue.textContent=Math.round(t).toString(),this.betaValue.textContent=e.toFixed(1);const a=t>=0?"+":"-",i=Math.abs(t);this.equation.innerHTML=`y = ${e.toFixed(1)}x ${a} ${i}<div class="equation-label">Fitted Function</div>`;const s=this.calculateMSE(t,e),n=this.calculateMAE(t,e),o=this.calculateR2(t,e);this.mseDisplay.innerHTML=`MSE = ${s.toFixed(2)}<div class="equation-label">Mean Squared Error</div>`,this.maeDisplay.innerHTML=`MAE = ${n.toFixed(2)}<div class="equation-label">Mean Absolute Error</div>`,this.updateR2Display(o)}updateR2Display(t){this.r2Display.innerHTML=`R² = ${t.toFixed(3)}<div class="equation-label">Coefficient of Determination</div>`,this.r2Display.classList.remove("r2-poor","r2-moderate","r2-good"),t<.3?this.r2Display.classList.add("r2-poor"):t<.7?this.r2Display.classList.add("r2-moderate"):this.r2Display.classList.add("r2-good")}setupEventListeners(){this.alphaSlider.addEventListener("input",()=>{this.updateDisplay(),this.draw(),this.debouncedScoreUpdate()}),this.betaSlider.addEventListener("input",()=>{this.updateDisplay(),this.draw(),this.debouncedScoreUpdate()}),this.solutionBtn.addEventListener("click",()=>{this.setOptimalValues()}),this.generateDataBtn.addEventListener("click",()=>{this.generateNewData()}),this.clearDataBtn.addEventListener("click",()=>{this.clearAllData()}),this.structuresBtn.addEventListener("click",()=>{this.loadStructuresData()}),this.geotechBtn.addEventListener("click",()=>{this.loadGeotechData()}),this.transportBtn.addEventListener("click",()=>{this.loadTransportData()}),this.environmentBtn.addEventListener("click",()=>{this.loadEnvironmentData()}),this.canvas.addEventListener("click",t=>{this.handleCanvasClick(t)}),this.showSquaresCheckbox.addEventListener("change",()=>{this.draw()}),this.showConfidenceCheckbox.addEventListener("change",()=>{this.draw()})}updateDisplay(){const t=parseFloat(this.alphaSlider.value),e=parseFloat(this.betaSlider.value);this.alphaValue.textContent=Math.round(t).toString(),this.betaValue.textContent=e.toFixed(1);const a=t>=0?"+":"-",i=Math.abs(t);this.equation.innerHTML=`$$y = ${e.toFixed(1)}x ${a} ${i}$$<div class="equation-label">Fitted Function</div>`,window.MathJax&&MathJax.typesetPromise([this.equation]).catch(t=>console.log(t));const s=this.calculateMSE(t,e),n=this.calculateMAE(t,e),o=this.calculateR2(t,e);this.mseDisplay.innerHTML=`$$\\text{MSE} = ${s.toFixed(2)}$$<div class="equation-label">Mean Squared Error</div>`,this.maeDisplay.innerHTML=`$$\\text{MAE} = ${n.toFixed(2)}$$<div class="equation-label">Mean Absolute Error</div>`,this.updateR2Display(o),window.MathJax&&MathJax.typesetPromise([this.mseDisplay,this.maeDisplay,this.r2Display]).catch(t=>console.log(t))}dataToCanvas(t,e){return{x:this.plotX+(t-this.xMin)/(this.xMax-this.xMin)*this.plotWidth,y:this.plotY+this.plotHeight-(e-this.yMin)/(this.yMax-this.yMin)*this.plotHeight}}drawAxes(){this.ctx.strokeStyle="#333",this.ctx.lineWidth=2,this.ctx.beginPath(),this.ctx.moveTo(this.plotX,this.plotY+this.plotHeight),this.ctx.lineTo(this.plotX+this.plotWidth,this.plotY+this.plotHeight),this.ctx.stroke(),this.ctx.beginPath(),this.ctx.moveTo(this.plotX,this.plotY),this.ctx.lineTo(this.plotX,this.plotY+this.plotHeight),this.ctx.stroke(),this.drawGrid(),this.drawLabels()}calculateTickInterval(t,e,a=5){const i=(e-t)/a,s=Math.floor(Math.log10(i)),n=i/Math.pow(10,s);let o;return o=n<=1?1:n<=2?2:n<=5?5:10,o*Math.pow(10,s)}drawGrid(){this.ctx.strokeStyle="#e0e0e0",this.ctx.lineWidth=1;const t=this.calculateTickInterval(this.xMin,this.xMax),e=this.calculateTickInterval(this.yMin,this.yMax);for(let e=Math.ceil(this.xMin/t)*t;e<=this.xMax;e+=t){const t=this.dataToCanvas(e,0);this.ctx.beginPath(),this.ctx.moveTo(t.x,this.plotY),this.ctx.lineTo(t.x,this.plotY+this.plotHeight),this.ctx.stroke()}for(let t=Math.ceil(this.yMin/e)*e;t<=this.yMax;t+=e){const e=this.dataToCanvas(0,t);this.ctx.beginPath(),this.ctx.moveTo(this.plotX,e.y),this.ctx.lineTo(this.plotX+this.plotWidth,e.y),this.ctx.stroke()}}formatTickLabel(t){return Math.abs(t)>=1e6?(t/1e6).toFixed(1)+"M":Math.abs(t)>=1e3?(t/1e3).toFixed(1)+"K":Math.abs(t)<.01&&0!==t?t.toExponential(1):t%1==0?t.toString():t.toFixed(2)}drawLabels(){this.ctx.fillStyle="#666",this.ctx.font="12px Arial",this.ctx.textAlign="center";const t=this.calculateTickInterval(this.xMin,this.xMax),e=this.calculateTickInterval(this.yMin,this.yMax);for(let e=Math.ceil(this.xMin/t)*t;e<=this.xMax;e+=t){const t=this.dataToCanvas(e,0);this.ctx.fillText(this.formatTickLabel(e),t.x,this.plotY+this.plotHeight+20)}this.ctx.textAlign="right";for(let t=Math.ceil(this.yMin/e)*e;t<=this.yMax;t+=e){const e=this.dataToCanvas(0,t);this.ctx.fillText(this.formatTickLabel(t),this.plotX-10,e.y+4)}this.ctx.fillStyle="#333",this.ctx.font="14px Arial",this.ctx.textAlign="center",this.ctx.fillText(this.xLabel,this.plotX+this.plotWidth/2,this.displayHeight-5),this.ctx.save(),this.ctx.translate(15,this.plotY+this.plotHeight/2),this.ctx.rotate(-Math.PI/2),this.ctx.fillText(this.yLabel,0,0),this.ctx.restore()}drawDataPoints(){parseFloat(this.alphaSlider.value),parseFloat(this.betaSlider.value);this.ctx.fillStyle="#ff6b6b",this.ctx.strokeStyle="#d63447",this.ctx.lineWidth=2,this.dataPoints.forEach(t=>{const e=this.dataToCanvas(t.x,t.y);this.ctx.beginPath(),this.ctx.arc(e.x,e.y,5,0,2*Math.PI),this.ctx.fill(),this.ctx.stroke()})}drawRegressionLine(){const t=parseFloat(this.alphaSlider.value),e=parseFloat(this.betaSlider.value),a=this.xMin,i=e*a+t,s=this.xMax,n=e*s+t,o=this.dataToCanvas(a,i),h=this.dataToCanvas(s,n);this.ctx.strokeStyle="#4ecdc4",this.ctx.lineWidth=3,this.ctx.beginPath(),this.ctx.moveTo(o.x,o.y),this.ctx.lineTo(h.x,h.y),this.ctx.stroke()}calculateMSE(t,e){let a=0;return this.dataPoints.forEach(i=>{const s=e*i.x+t,n=i.y-s;a+=n*n}),a/this.dataPoints.length}calculateMAE(t,e){let a=0;return this.dataPoints.forEach(i=>{const s=e*i.x+t,n=Math.abs(i.y-s);a+=n}),a/this.dataPoints.length}calculateR2(t,e){if(0===this.dataPoints.length)return 0;const a=this.dataPoints.reduce((t,e)=>t+e.y,0)/this.dataPoints.length;let i=0;this.dataPoints.forEach(t=>{const e=t.y-a;i+=e*e});let s=0;return this.dataPoints.forEach(a=>{const i=e*a.x+t,n=a.y-i;s+=n*n}),0===i?0:1-s/i}calculateOptimalValues(){const t=this.dataPoints.length;let e=0,a=0,i=0,s=0;this.dataPoints.forEach(t=>{e+=t.x,a+=t.y,i+=t.x*t.y,s+=t.x*t.x});const n=(t*i-e*a)/(t*s-e*e);return{alpha:(a-n*e)/t,beta:n}}setOptimalValues(){const t=this.calculateOptimalValues(),e=Math.max(-100,Math.min(200,t.alpha)),a=Math.max(-10,Math.min(30,t.beta));this.alphaSlider.value=Math.round(e).toString(),this.betaSlider.value=a.toFixed(1),this.updateDisplay(),this.draw()}generateNewData(){this.clearAllData(),this.generateDataPoints(),this.hideDatasetInfo(),this.updateDisplay(),this.draw()}clearAllData(){this.dataPoints=[],this.xLabel="X",this.yLabel="Y",this.xMin=-10,this.xMax=10,this.yMin=-100,this.yMax=100,this.hideDatasetInfo(),this.updateDisplay(),this.draw()}showDatasetInfo(t){const e=this.datasets[t];if(!e)return;const a=document.getElementById("dataset-info-box"),i=document.getElementById("dataset-info-title"),s=document.getElementById("dataset-info-description"),n=document.getElementById("dataset-info-variables");i.textContent=e.title,s.textContent=e.description,n.textContent=e.variables,a.classList.add("show")}hideDatasetInfo(){const t=document.getElementById("dataset-info-box");t&&t.classList.remove("show")}async loadDataset(t){const e=this.datasets[t];if(e)try{const t=await fetch(e.file),a=(await t.text()).trim().split("\n"),i=a[0].split(",").map(t=>t.trim()),s=i.indexOf(e.xColumn),n=i.indexOf(e.yColumn);if(-1===s||-1===n)return void console.error("Column names not found in CSV");const o=[];for(let t=1;t<a.length;t++){const e=a[t].split(",");if(e.length>1){const t=parseFloat(e[s]),a=parseFloat(e[n]);isNaN(t)||isNaN(a)||o.push({x:t,y:a})}}this.dataPoints=o,this.xLabel=e.xLabel,this.yLabel=e.yLabel;const h=o.map(t=>t.x),l=o.map(t=>t.y),r=Math.max(...h)-Math.min(...h),d=Math.max(...l)-Math.min(...l),c=.1*r,p=.1*d;this.xMin=Math.min(...h)-c,this.xMax=Math.max(...h)+c,this.yMin=Math.min(...l)-p,this.yMax=Math.max(...l)+p,this.updateDisplay(),this.draw()}catch(t){console.error("Error loading dataset:",t)}}async loadStructuresData(){await this.loadDataset("structures"),this.showDatasetInfo("structures")}async loadGeotechData(){await this.loadDataset("geotech"),this.showDatasetInfo("geotech")}async loadTransportData(){await this.loadDataset("transport"),this.showDatasetInfo("transport")}async loadEnvironmentData(){await this.loadDataset("environment"),this.showDatasetInfo("environment")}handleCanvasClick(t){const e=this.canvas.getBoundingClientRect(),a=t.clientX-e.left,i=t.clientY-e.top,s=this.canvasToData(a,i);this.isWithinPlotArea(a,i)&&(this.dataPoints.push({x:s.x,y:s.y}),this.updateDisplay(),this.draw())}canvasToData(t,e){return{x:this.xMin+(t-this.plotX)/this.plotWidth*(this.xMax-this.xMin),y:this.yMax-(e-this.plotY)/this.plotHeight*(this.yMax-this.yMin)}}isWithinPlotArea(t,e){return t>=this.plotX&&t<=this.plotX+this.plotWidth&&e>=this.plotY&&e<=this.plotY+this.plotHeight}drawErrorLines(){const t=parseFloat(this.alphaSlider.value),e=parseFloat(this.betaSlider.value);this.ctx.strokeStyle="#777777",this.ctx.lineWidth=1,this.ctx.setLineDash([2,2]),this.dataPoints.forEach(a=>{const i=e*a.x+t,s=this.dataToCanvas(a.x,a.y),n=this.dataToCanvas(a.x,i);this.ctx.beginPath(),this.ctx.moveTo(s.x,s.y),this.ctx.lineTo(n.x,n.y),this.ctx.stroke()}),this.ctx.setLineDash([])}drawErrorSquares(){const t=parseFloat(this.alphaSlider.value),e=parseFloat(this.betaSlider.value);this.ctx.fillStyle="rgba(255, 107, 107, 0.15)",this.ctx.strokeStyle="rgba(255, 107, 107, 0.25)",this.ctx.lineWidth=1,this.dataPoints.forEach(a=>{const i=e*a.x+t,s=a.y-i,n=(Math.abs(s),this.dataToCanvas(a.x,a.y)),o=this.dataToCanvas(a.x,i),h=Math.abs(n.y-o.y);if(h>2){let t,e;s>0?(t=o.x,e=o.y-h):(t=o.x,e=o.y),this.ctx.fillRect(t,e,h,h),this.ctx.strokeRect(t,e,h,h)}})}drawConfidenceInterval(){if(this.dataPoints.length<3)return;const t=parseFloat(this.alphaSlider.value),e=parseFloat(this.betaSlider.value),a=this.dataPoints.length,i=this.calculateMSE(t,e),s=Math.sqrt(i),n=this.dataPoints.reduce((t,e)=>t+e.x,0)/a,o=this.dataPoints.reduce((t,e)=>t+(e.x-n)**2,0);this.ctx.fillStyle="rgba(78, 205, 196, 0.2)",this.ctx.strokeStyle="rgba(78, 205, 196, 0.4)",this.ctx.lineWidth=1,this.ctx.beginPath();const h=(this.xMax-this.xMin)/50;let l=!0;for(let i=this.xMin;i<=this.xMax;i+=h){const h=e*i+t,r=2*(s*Math.sqrt(1/a+(i-n)**2/o)),d=h+r,c=h-r,p=this.dataToCanvas(i,d);this.dataToCanvas(i,c);l?(this.ctx.moveTo(p.x,p.y),l=!1):this.ctx.lineTo(p.x,p.y)}for(let i=this.xMax;i>=this.xMin;i-=h){const h=e*i+t-2*(s*Math.sqrt(1/a+(i-n)**2/o)),l=this.dataToCanvas(i,h);this.ctx.lineTo(l.x,l.y)}this.ctx.closePath(),this.ctx.fill(),this.ctx.stroke()}draw(){this.ctx.clearRect(0,0,this.displayWidth,this.displayHeight),this.ctx.lineCap="round",this.ctx.lineJoin="round",this.drawAxes(),this.showConfidenceCheckbox.checked&&this.drawConfidenceInterval(),this.drawErrorLines(),this.showSquaresCheckbox.checked&&this.drawErrorSquares(),this.drawDataPoints(),this.drawRegressionLine()}}let demoInstance;document.addEventListener("DOMContentLoaded",()=>{demoInstance=new LinearRegressionDemo});