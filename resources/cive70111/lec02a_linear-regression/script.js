class LinearRegressionDemo{constructor(){this.canvas=document.getElementById("plot"),this.ctx=this.canvas.getContext("2d"),this.alphaSlider=document.getElementById("alpha"),this.betaSlider=document.getElementById("beta"),this.alphaValue=document.getElementById("alpha-value"),this.betaValue=document.getElementById("beta-value"),this.equation=document.getElementById("equation"),this.mseDisplay=document.getElementById("mse"),this.maeDisplay=document.getElementById("mae"),this.solutionBtn=document.getElementById("solution-btn"),this.generateDataBtn=document.getElementById("generate-data-btn"),this.clearDataBtn=document.getElementById("clear-data-btn"),this.structuresBtn=document.getElementById("structures-btn"),this.geotechBtn=document.getElementById("geotech-btn"),this.transportBtn=document.getElementById("transport-btn"),this.environmentBtn=document.getElementById("environment-btn"),this.setupHighDPICanvas(),this.plotWidth=this.displayWidth-90,this.plotHeight=this.displayHeight-80,this.plotX=50,this.plotY=40,this.xMin=-10,this.xMax=10,this.yMin=-100,this.yMax=100,this.xLabel="X",this.yLabel="Y",this.datasets={structures:{name:"Structures - Concrete Strength",file:"example-data/structures_concrete.csv",xLabel:"Cement (kg/m続)",yLabel:"Compressive Strength (MPa)",xColumn:"Cement_kg_per_m3",yColumn:"Compressive_Strength_MPa",title:"Structures: Concrete Strength",description:"This dataset shows how increasing cement content tends to increase concrete strength. The data comes from concrete compressive strength measurements.",variables:"Variables: Cement content (kg/m続) vs Compressive strength (MPa)"},geotech:{name:"Geotechnics - Soil Properties",file:"example-data/geotechnics_soil.csv",xLabel:"Sand Content (%)",yLabel:"Uniformity Coefficient",xColumn:"Sand_Percent",yColumn:"Uniformity_Coefficient",title:"Geotechnics: Soil Properties",description:"This dataset explores how soil composition relates to gradation properties. It demonstrates the relationship between sand percentage and uniformity coefficient in soil samples.",variables:"Variables: Sand percentage (%) vs Uniformity coefficient (measure of soil gradation)"},transport:{name:"Transport - Traffic Flow",file:"example-data/transport_traffic.csv",xLabel:"Vehicle Count",yLabel:"Vehicle Speed (km/h)",xColumn:"Vehicle_Count",yColumn:"Vehicle_Speed_kmh",title:"Transport: Urban Traffic Flow",description:"This dataset shows the negative relationship between vehicle count and speed, demonstrating traffic congestion effects in urban environments.",variables:"Variables: Number of vehicles detected vs Average vehicle speed (km/h)"},environment:{name:"Environment - Wastewater Energy",file:"example-data/environment_wastewater.csv",xLabel:"Inflow (m続/s)",yLabel:"Energy Consumption (MWh)",xColumn:"Inflow_m3_s",yColumn:"Energy_Consumption_MWh",title:"Environment: Wastewater Treatment",description:"This dataset explores how higher inflow rates are associated with greater energy use in wastewater treatment plants, showing the energy demands of processing larger volumes.",variables:"Variables: Average daily inflow (m続/s) vs Daily energy consumption (MWh)"}},this.generateDataPoints(),this.setupEventListeners(),this.initializeDisplay()}generateDataPoints(){this.dataPoints=[];const t=14*(Math.random()-.5),e=40*(Math.random()-.5);for(let i=0;i<10;i++){const i=18*(Math.random()-.5),a=t*i+e+25*(Math.random()-.5)*2;this.dataPoints.push({x:i,y:a})}}setupHighDPICanvas(){const t=window.devicePixelRatio||1,e=this.canvas.clientWidth||600,i=this.canvas.clientHeight||400;this.canvas.width=e*t,this.canvas.height=i*t,this.canvas.style.width=e+"px",this.canvas.style.height=i+"px",this.ctx.scale(t,t),this.ctx.imageSmoothingEnabled=!0,this.ctx.imageSmoothingQuality="high",this.dpr=t,this.displayWidth=e,this.displayHeight=i}initializeDisplay(){this.draw(),this.updateDisplayPlainText(),window.MathJax&&(MathJax.startup&&MathJax.startup.promise?MathJax.startup.promise.then(()=>{this.updateDisplay()}).catch(()=>{console.warn("MathJax failed to load, using plain text equations")}):setTimeout(()=>{this.updateDisplay()},100))}updateDisplayPlainText(){const t=parseFloat(this.alphaSlider.value),e=parseFloat(this.betaSlider.value);this.alphaValue.textContent=Math.round(t).toString(),this.betaValue.textContent=e.toFixed(1);const i=t>=0?"+":"";this.equation.textContent=`y = ${e.toFixed(1)}x ${i} ${t}`;const a=this.calculateMSE(t,e),s=this.calculateMAE(t,e);this.mseDisplay.textContent=`MSE = ${a.toFixed(2)}`,this.maeDisplay.textContent=`MAE = ${s.toFixed(2)}`}setupEventListeners(){this.alphaSlider.addEventListener("input",()=>{this.updateDisplay(),this.draw()}),this.betaSlider.addEventListener("input",()=>{this.updateDisplay(),this.draw()}),this.solutionBtn.addEventListener("click",()=>{this.setOptimalValues()}),this.generateDataBtn.addEventListener("click",()=>{this.generateNewData()}),this.clearDataBtn.addEventListener("click",()=>{this.clearAllData()}),this.structuresBtn.addEventListener("click",()=>{this.loadStructuresData()}),this.geotechBtn.addEventListener("click",()=>{this.loadGeotechData()}),this.transportBtn.addEventListener("click",()=>{this.loadTransportData()}),this.environmentBtn.addEventListener("click",()=>{this.loadEnvironmentData()}),this.canvas.addEventListener("click",t=>{this.handleCanvasClick(t)})}updateDisplay(){const t=parseFloat(this.alphaSlider.value),e=parseFloat(this.betaSlider.value);this.alphaValue.textContent=Math.round(t).toString(),this.betaValue.textContent=e.toFixed(1);const i=t>=0?"+":"",a=t>=0?t:Math.abs(t);this.equation.innerHTML=`$$y = ${e.toFixed(1)}x ${i} ${a}$$`,window.MathJax&&MathJax.typesetPromise([this.equation]).catch(t=>console.log(t));const s=this.calculateMSE(t,e),n=this.calculateMAE(t,e);this.mseDisplay.innerHTML=`$$\\text{MSE} = ${s.toFixed(2)}$$`,this.maeDisplay.innerHTML=`$$\\text{MAE} = ${n.toFixed(2)}$$`,window.MathJax&&MathJax.typesetPromise([this.mseDisplay,this.maeDisplay]).catch(t=>console.log(t))}dataToCanvas(t,e){return{x:this.plotX+(t-this.xMin)/(this.xMax-this.xMin)*this.plotWidth,y:this.plotY+this.plotHeight-(e-this.yMin)/(this.yMax-this.yMin)*this.plotHeight}}drawAxes(){this.ctx.strokeStyle="#333",this.ctx.lineWidth=2,this.ctx.beginPath(),this.ctx.moveTo(this.plotX,this.plotY+this.plotHeight),this.ctx.lineTo(this.plotX+this.plotWidth,this.plotY+this.plotHeight),this.ctx.stroke(),this.ctx.beginPath(),this.ctx.moveTo(this.plotX,this.plotY),this.ctx.lineTo(this.plotX,this.plotY+this.plotHeight),this.ctx.stroke(),this.drawGrid(),this.drawLabels()}calculateTickInterval(t,e,i=5){const a=(e-t)/i,s=Math.floor(Math.log10(a)),n=a/Math.pow(10,s);let h;return h=n<=1?1:n<=2?2:n<=5?5:10,h*Math.pow(10,s)}drawGrid(){this.ctx.strokeStyle="#e0e0e0",this.ctx.lineWidth=1;const t=this.calculateTickInterval(this.xMin,this.xMax),e=this.calculateTickInterval(this.yMin,this.yMax);for(let e=Math.ceil(this.xMin/t)*t;e<=this.xMax;e+=t){const t=this.dataToCanvas(e,0);this.ctx.beginPath(),this.ctx.moveTo(t.x,this.plotY),this.ctx.lineTo(t.x,this.plotY+this.plotHeight),this.ctx.stroke()}for(let t=Math.ceil(this.yMin/e)*e;t<=this.yMax;t+=e){const e=this.dataToCanvas(0,t);this.ctx.beginPath(),this.ctx.moveTo(this.plotX,e.y),this.ctx.lineTo(this.plotX+this.plotWidth,e.y),this.ctx.stroke()}}formatTickLabel(t){return Math.abs(t)>=1e6?(t/1e6).toFixed(1)+"M":Math.abs(t)>=1e3?(t/1e3).toFixed(1)+"K":Math.abs(t)<.01&&0!==t?t.toExponential(1):t%1==0?t.toString():t.toFixed(2)}drawLabels(){this.ctx.fillStyle="#666",this.ctx.font="12px Arial",this.ctx.textAlign="center";const t=this.calculateTickInterval(this.xMin,this.xMax),e=this.calculateTickInterval(this.yMin,this.yMax);for(let e=Math.ceil(this.xMin/t)*t;e<=this.xMax;e+=t){const t=this.dataToCanvas(e,0);this.ctx.fillText(this.formatTickLabel(e),t.x,this.plotY+this.plotHeight+20)}this.ctx.textAlign="right";for(let t=Math.ceil(this.yMin/e)*e;t<=this.yMax;t+=e){const e=this.dataToCanvas(0,t);this.ctx.fillText(this.formatTickLabel(t),this.plotX-10,e.y+4)}this.ctx.fillStyle="#333",this.ctx.font="14px Arial",this.ctx.textAlign="center",this.ctx.fillText(this.xLabel,this.plotX+this.plotWidth/2,this.displayHeight-5),this.ctx.save(),this.ctx.translate(15,this.plotY+this.plotHeight/2),this.ctx.rotate(-Math.PI/2),this.ctx.fillText(this.yLabel,0,0),this.ctx.restore()}drawDataPoints(){this.ctx.fillStyle="#ff6b6b",this.ctx.strokeStyle="#d63447",this.ctx.lineWidth=2,this.dataPoints.forEach(t=>{const e=this.dataToCanvas(t.x,t.y);this.ctx.beginPath(),this.ctx.arc(e.x,e.y,5,0,2*Math.PI),this.ctx.fill(),this.ctx.stroke()})}drawRegressionLine(){const t=parseFloat(this.alphaSlider.value),e=parseFloat(this.betaSlider.value),i=this.xMin,a=e*i+t,s=this.xMax,n=e*s+t,h=this.dataToCanvas(i,a),o=this.dataToCanvas(s,n);this.ctx.strokeStyle="#4ecdc4",this.ctx.lineWidth=3,this.ctx.beginPath(),this.ctx.moveTo(h.x,h.y),this.ctx.lineTo(o.x,o.y),this.ctx.stroke()}calculateMSE(t,e){let i=0;return this.dataPoints.forEach(a=>{const s=e*a.x+t,n=a.y-s;i+=n*n}),i/this.dataPoints.length}calculateMAE(t,e){let i=0;return this.dataPoints.forEach(a=>{const s=e*a.x+t,n=Math.abs(a.y-s);i+=n}),i/this.dataPoints.length}calculateOptimalValues(){const t=this.dataPoints.length;let e=0,i=0,a=0,s=0;this.dataPoints.forEach(t=>{e+=t.x,i+=t.y,a+=t.x*t.y,s+=t.x*t.x});const n=(t*a-e*i)/(t*s-e*e);return{alpha:(i-n*e)/t,beta:n}}setOptimalValues(){const t=this.calculateOptimalValues(),e=Math.max(-100,Math.min(200,t.alpha)),i=Math.max(-10,Math.min(30,t.beta));this.alphaSlider.value=Math.round(e).toString(),this.betaSlider.value=i.toFixed(1),this.updateDisplay(),this.draw()}generateNewData(){this.clearAllData(),this.generateDataPoints(),this.hideDatasetInfo(),this.updateDisplay(),this.draw()}clearAllData(){this.dataPoints=[],this.xLabel="X",this.yLabel="Y",this.xMin=-10,this.xMax=10,this.yMin=-100,this.yMax=100,this.hideDatasetInfo(),this.updateDisplay(),this.draw()}showDatasetInfo(t){const e=this.datasets[t];if(!e)return;const i=document.getElementById("dataset-info-box"),a=document.getElementById("dataset-info-title"),s=document.getElementById("dataset-info-description"),n=document.getElementById("dataset-info-variables");a.textContent=e.title,s.textContent=e.description,n.textContent=e.variables,i.classList.add("show")}hideDatasetInfo(){const t=document.getElementById("dataset-info-box");t&&t.classList.remove("show")}async loadDataset(t){const e=this.datasets[t];if(e)try{const t=await fetch(e.file),i=(await t.text()).trim().split("\n"),a=i[0].split(",").map(t=>t.trim()),s=a.indexOf(e.xColumn),n=a.indexOf(e.yColumn);if(-1===s||-1===n)return void console.error("Column names not found in CSV");const h=[];for(let t=1;t<i.length;t++){const e=i[t].split(",");if(e.length>1){const t=parseFloat(e[s]),i=parseFloat(e[n]);isNaN(t)||isNaN(i)||h.push({x:t,y:i})}}this.dataPoints=h,this.xLabel=e.xLabel,this.yLabel=e.yLabel;const o=h.map(t=>t.x),l=h.map(t=>t.y),r=Math.max(...o)-Math.min(...o),c=Math.max(...l)-Math.min(...l),d=.1*r,x=.1*c;this.xMin=Math.min(...o)-d,this.xMax=Math.max(...o)+d,this.yMin=Math.min(...l)-x,this.yMax=Math.max(...l)+x,this.updateDisplay(),this.draw()}catch(t){console.error("Error loading dataset:",t)}}async loadStructuresData(){await this.loadDataset("structures"),this.showDatasetInfo("structures")}async loadGeotechData(){await this.loadDataset("geotech"),this.showDatasetInfo("geotech")}async loadTransportData(){await this.loadDataset("transport"),this.showDatasetInfo("transport")}async loadEnvironmentData(){await this.loadDataset("environment"),this.showDatasetInfo("environment")}handleCanvasClick(t){const e=this.canvas.getBoundingClientRect(),i=t.clientX-e.left,a=t.clientY-e.top,s=this.canvasToData(i,a);this.isWithinPlotArea(i,a)&&(this.dataPoints.push({x:s.x,y:s.y}),this.updateDisplay(),this.draw())}canvasToData(t,e){return{x:this.xMin+(t-this.plotX)/this.plotWidth*(this.xMax-this.xMin),y:this.yMax-(e-this.plotY)/this.plotHeight*(this.yMax-this.yMin)}}isWithinPlotArea(t,e){return t>=this.plotX&&t<=this.plotX+this.plotWidth&&e>=this.plotY&&e<=this.plotY+this.plotHeight}drawErrorLines(){const t=parseFloat(this.alphaSlider.value),e=parseFloat(this.betaSlider.value);this.ctx.strokeStyle="#777777",this.ctx.lineWidth=1,this.ctx.setLineDash([2,2]),this.dataPoints.forEach(i=>{const a=e*i.x+t,s=this.dataToCanvas(i.x,i.y),n=this.dataToCanvas(i.x,a);this.ctx.beginPath(),this.ctx.moveTo(s.x,s.y),this.ctx.lineTo(n.x,n.y),this.ctx.stroke()}),this.ctx.setLineDash([])}draw(){this.ctx.clearRect(0,0,this.displayWidth,this.displayHeight),this.ctx.lineCap="round",this.ctx.lineJoin="round",this.drawAxes(),this.drawErrorLines(),this.drawDataPoints(),this.drawRegressionLine()}}document.addEventListener("DOMContentLoaded",()=>{new LinearRegressionDemo});