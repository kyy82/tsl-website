class GradientDescentDemo{constructor(){this.dataCanvas=document.getElementById("dataCanvas"),this.costCanvas=document.getElementById("costCanvas"),this.dataCtx=this.dataCanvas.getContext("2d"),this.costCtx=this.costCanvas.getContext("2d"),this.datasetSelect=document.getElementById("datasetSelect"),this.alpha0Input=document.getElementById("alpha0"),this.beta0Input=document.getElementById("beta0"),this.etaInput=document.getElementById("eta"),this.stepBtn=document.getElementById("stepBtn"),this.resetBtn=document.getElementById("resetBtn"),this.showCaptionsCheck=document.getElementById("showCaptions"),this.iterOut=document.getElementById("iter"),this.alphaOut=document.getElementById("alphaOut"),this.betaOut=document.getElementById("betaOut"),this.jOut=document.getElementById("jOut"),this.gradNormOut=document.getElementById("gradNormOut"),this.captionText=document.getElementById("captionText"),this.state={alpha:0,beta:0,eta:.01,iter:0,history:[]},this.datasets={sample:{data:[{x:1,y:2.2},{x:2,y:3.8},{x:3,y:5.1},{x:4,y:6.9},{x:5,y:8.2},{x:6,y:9.8},{x:7,y:11.1}],optimal:{alpha:1.4,beta:.8}},structures:{file:"example-data/structures_concrete.csv",xColumn:"Cement_kg_per_m3",yColumn:"Compressive_Strength_MPa",optimal:{alpha:0,beta:0}},geotech:{file:"example-data/geotechnics_soil.csv",xColumn:"Sand_Percent",yColumn:"Uniformity_Coefficient",optimal:{alpha:0,beta:0}},transport:{file:"example-data/transport_traffic.csv",xColumn:"Vehicle_Count",yColumn:"Vehicle_Speed_kmh",optimal:{alpha:0,beta:0}},environment:{file:"example-data/environment_wastewater.csv",xColumn:"Inflow_m3_s",yColumn:"Energy_Consumption_MWh",optimal:{alpha:0,beta:0}}},this.normStats={xMean:0,xStd:1,yMean:0,yStd:1},this.costGrid=null,this.gridBounds={alphaMin:-2,alphaMax:2,betaMin:-2,betaMax:2,resolution:100},this.setupHighDPICanvas(),this.setupEventListeners(),this.setRandomInitialValues(),this.loadSampleDataset()}setupHighDPICanvas(){const t=window.devicePixelRatio||1,e=this.dataCanvas.getBoundingClientRect();this.dataCanvas.width=e.width*t,this.dataCanvas.height=400*t,this.dataCanvas.style.width=e.width+"px",this.dataCanvas.style.height="400px",this.dataCtx.scale(t,t);const a=this.costCanvas.getBoundingClientRect();this.costCanvas.width=a.width*t,this.costCanvas.height=400*t,this.costCanvas.style.width=a.width+"px",this.costCanvas.style.height="400px",this.costCtx.scale(t,t),this.dataWidth=e.width,this.dataHeight=400,this.costWidth=a.width,this.costHeight=400}setupEventListeners(){this.datasetSelect.addEventListener("change",(t=>{const e=t.target.value;"sample"===e?this.loadSampleDataset():this.loadDataset(e)})),this.alpha0Input.addEventListener("change",(()=>this.reset())),this.beta0Input.addEventListener("change",(()=>this.reset())),this.etaInput.addEventListener("change",(()=>this.reset())),this.stepBtn.addEventListener("click",(()=>this.step())),this.resetBtn.addEventListener("click",(()=>this.reset())),this.showCaptionsCheck.addEventListener("change",(()=>{this.showCaptionsCheck.checked?this.captionText.classList.add("show"):this.captionText.classList.remove("show")}))}updateGridBounds(t){const e={sample:{alphaMin:-2,alphaMax:2,betaMin:-2,betaMax:2},structures:{alphaMin:-2,alphaMax:2,betaMin:-2,betaMax:2},geotech:{alphaMin:-2,alphaMax:2,betaMin:-2,betaMax:2},transport:{alphaMin:-2,alphaMax:2,betaMin:-2,betaMax:2},environment:{alphaMin:-2,alphaMax:2,betaMin:-2,betaMax:2}},a=e[t]||e.sample;this.gridBounds={alphaMin:a.alphaMin,alphaMax:a.alphaMax,betaMin:a.betaMin,betaMax:a.betaMax,resolution:100}}getDataBounds(t){const e={sample:{xMin:-3,xMax:3,yMin:-3,yMax:3},structures:{xMin:-3,xMax:3,yMin:-3,yMax:3},geotech:{xMin:-3,xMax:3,yMin:-3,yMax:3},transport:{xMin:-3,xMax:3,yMin:-3,yMax:3},environment:{xMin:-3,xMax:3,yMin:-3,yMax:3}};return e[t]||e.sample}getDefaultLearningRate(t){const e={sample:.1,structures:.1,geotech:.1,transport:.1,environment:.1};return e[t]||e.sample}setRandomInitialValues(){const t=4*(Math.random()-.5),e=4*(Math.random()-.5);this.alpha0Input.value=t.toFixed(1),this.beta0Input.value=e.toFixed(1)}normalizeData(t){const e=t.reduce(((t,e)=>t+e.x),0)/t.length,a=t.reduce(((t,e)=>t+e.y),0)/t.length,s=t.reduce(((t,a)=>t+Math.pow(a.x-e,2)),0)/t.length,i=t.reduce(((t,e)=>t+Math.pow(e.y-a,2)),0)/t.length,n=Math.sqrt(s),h=Math.sqrt(i);return this.normStats={xMean:e,xStd:n,yMean:a,yStd:h},t.map((t=>({x:(t.x-e)/n,y:(t.y-a)/h})))}calculateOptimalSolution(t){const e=t.length;let a=0,s=0,i=0,n=0;for(const{x:e,y:h}of t)a+=e,s+=h,i+=e*h,n+=e*e;const h=e*n-a*a;if(Math.abs(h)<1e-10)return{alpha:0,beta:0};const o=(e*i-a*s)/h;return{alpha:(s-o*a)/e,beta:o}}loadSampleDataset(){const t=this.datasets.sample.data;this.dataset=this.normalizeData(t);const e=this.calculateOptimalSolution(this.dataset);this.datasets.sample.optimal=e,this.currentDatasetKey="sample",this.updateGridBounds("sample"),this.setRandomInitialValues();const a=this.getDefaultLearningRate("sample");this.etaInput.value=a,this.initialize()}async loadDataset(t){const e=this.datasets[t];if(e&&e.file)try{const a=await fetch(e.file),s=(await a.text()).trim().split("\n"),i=s[0].split(",").map((t=>t.trim())),n=i.indexOf(e.xColumn),h=i.indexOf(e.yColumn);if(-1===n||-1===h)return void console.error("Column names not found in CSV");const o=[];for(let t=1;t<s.length;t++){const e=s[t].split(",");if(e.length>1){const t=parseFloat(e[n]),a=parseFloat(e[h]);isNaN(t)||isNaN(a)||o.push({x:t,y:a})}}const l=this.normalizeData(o);this.dataset=l;const r=this.calculateOptimalSolution(l);this.datasets[t].optimal=r,this.currentDatasetKey=t,this.updateGridBounds(t),this.setRandomInitialValues();const d=this.getDefaultLearningRate(t);this.etaInput.value=d,this.initialize()}catch(t){console.error("Error loading dataset:",t)}}initialize(){this.state.alpha=parseFloat(this.alpha0Input.value)||0,this.state.beta=parseFloat(this.beta0Input.value)||0,this.state.eta=parseFloat(this.etaInput.value)||.1,this.state.iter=0,this.state.history=[{alpha:this.state.alpha,beta:this.state.beta,J:this.costJ(this.state.alpha,this.state.beta)}],this.computeCostGrid(),this.updateReadouts(),this.render(),this.showCaptionsCheck.checked&&(this.captionText.textContent='Ready to start gradient descent. Click "Step" to begin.',this.captionText.classList.add("show")),this.stepBtn.disabled=!1}costJ(t,e){const a=this.dataset.length;let s=0;for(const{x:a,y:i}of this.dataset){const n=t+e*a-i;s+=n*n}return s/(2*a)}gradients(t,e){const a=this.dataset.length;let s=0,i=0;for(const{x:a,y:n}of this.dataset){const h=t+e*a-n;s+=h,i+=h*a}return{dAlpha:s/a,dBeta:i/a}}step(){const{dAlpha:t,dBeta:e}=this.gradients(this.state.alpha,this.state.beta),a=this.state.alpha,s=this.state.beta,i=this.costJ(a,s);this.state.alpha=this.state.alpha-this.state.eta*t,this.state.beta=this.state.beta-this.state.eta*e,this.state.iter++;const n=this.costJ(this.state.alpha,this.state.beta);if(this.state.history.push({alpha:this.state.alpha,beta:this.state.beta,J:n}),this.updateReadouts(),this.showCaptionsCheck.checked){Math.sqrt(t*t+e*e);this.captionText.textContent=n>1.5*i?`Warning: Cost increased from ${i.toFixed(3)} to ${n.toFixed(3)}. Learning rate might be too large.`:`Step ${this.state.iter}: Updated α: ${a.toFixed(3)} → ${this.state.alpha.toFixed(3)}, β: ${s.toFixed(3)} → ${this.state.beta.toFixed(3)}. Cost: ${i.toFixed(3)} → ${n.toFixed(3)}`}this.render()}reset(){this.setRandomInitialValues(),this.initialize()}computeCostGrid(){const{alphaMin:t,alphaMax:e,betaMin:a,betaMax:s,resolution:i}=this.gridBounds;this.costGrid=[];for(let n=0;n<i;n++){const h=[];for(let o=0;o<i;o++){const l=t+(e-t)*n/(i-1),r=a+(s-a)*o/(i-1);h.push(this.costJ(l,r))}this.costGrid.push(h)}}updateReadouts(){const{dAlpha:t,dBeta:e}=this.gradients(this.state.alpha,this.state.beta),a=Math.sqrt(t*t+e*e);this.iterOut.textContent=this.state.iter,this.alphaOut.textContent=this.state.alpha.toFixed(3),this.betaOut.textContent=this.state.beta.toFixed(3),this.jOut.textContent=this.costJ(this.state.alpha,this.state.beta).toFixed(3),this.gradNormOut.textContent=a.toFixed(3)}render(){this.renderDataView(),this.renderCostView()}renderDataView(){const t=this.dataCtx,e=this.dataWidth,a=this.dataHeight,s=40;t.clearRect(0,0,e,a);const i=this.getDataBounds(this.currentDatasetKey),n=i.xMin,h=i.xMax,o=i.yMin,l=i.yMax,r=t=>s+(t-n)/(h-n)*(e-80),d=t=>a-s-(t-o)/(l-o)*(a-80);t.strokeStyle="#333",t.lineWidth=2,t.beginPath(),t.moveTo(s,a-s),t.lineTo(e-s,a-s),t.moveTo(s,s),t.lineTo(s,a-s),t.stroke(),t.strokeStyle="#e0e0e0",t.lineWidth=1;for(let i=0;i<=5;i++){const n=s+i*(e-80)/5,h=s+i*(a-80)/5;t.beginPath(),t.moveTo(n,s),t.lineTo(n,a-s),t.stroke(),t.beginPath(),t.moveTo(s,h),t.lineTo(e-s,h),t.stroke()}t.fillStyle="#666",t.font="12px Arial",t.textAlign="center",t.fillText("x (normalized)",e/2,a-10),t.save(),t.translate(15,a/2),t.rotate(-Math.PI/2),t.fillText("y (normalized)",0,0),t.restore(),t.font="10px Arial";for(let e=0;e<=5;e++){const i=n+e*(h-n)/5,c=o+e*(l-o)/5;t.textAlign="center",t.fillText(i.toFixed(1),r(i),a-s+15),t.textAlign="right",t.fillText(c.toFixed(1),35,d(c)+3)}const c=this.state.alpha+this.state.beta*n,p=this.state.alpha+this.state.beta*h;t.strokeStyle="#4ecdc4",t.lineWidth=3,t.beginPath(),t.moveTo(r(n),d(c)),t.lineTo(r(h),d(p)),t.stroke(),t.strokeStyle="#ff6b6b",t.lineWidth=1,t.setLineDash([5,5]);for(const{x:e,y:a}of this.dataset){const s=this.state.alpha+this.state.beta*e;t.beginPath(),t.moveTo(r(e),d(a)),t.lineTo(r(e),d(s)),t.stroke()}t.setLineDash([]),t.fillStyle="#ff6b6b",t.strokeStyle="#d63447",t.lineWidth=2;for(const{x:e,y:a}of this.dataset)t.beginPath(),t.arc(r(e),d(a),5,0,2*Math.PI),t.fill(),t.stroke()}renderCostView(){const t=this.costCtx,e=this.costWidth,a=this.costHeight,s=40;t.clearRect(0,0,e,a);const{alphaMin:i,alphaMax:n,betaMin:h,betaMax:o,resolution:l}=this.gridBounds,r=t=>s+(t-i)/(n-i)*(e-80),d=t=>a-s-(t-h)/(o-h)*(a-80);if(t.strokeStyle="#333",t.lineWidth=2,t.beginPath(),t.moveTo(s,a-s),t.lineTo(e-s,a-s),t.moveTo(s,s),t.lineTo(s,a-s),t.stroke(),t.fillStyle="#666",t.font="12px Arial",t.textAlign="center",t.fillText("α (normalized intercept)",e/2,a-10),t.save(),t.translate(15,a/2),t.rotate(-Math.PI/2),t.fillText("β (normalized slope)",0,0),t.restore(),this.costGrid){const c=(e-80)/l,p=(a-80)/l;let x=1/0,u=-1/0;for(let t=0;t<l;t++)for(let e=0;e<l;e++){const a=this.costGrid[t][e];x=Math.min(x,a),u=Math.max(u,a)}for(let e=0;e<l;e++)for(let a=0;a<l;a++){const i=(this.costGrid[e][a]-x)/(u-x),n=Math.floor(255*i),h=Math.floor(100*(1-i)),o=Math.floor(255*(1-i));t.fillStyle=`rgb(${n}, ${h}, ${o})`,t.fillRect(s+e*c,s+(l-1-a)*p,c+1,p+1)}t.strokeStyle="rgba(255, 255, 255, 0.3)",t.lineWidth=1;const m=10;for(let e=1;e<m;e++){const a=x+(u-x)*e/m;for(let e=0;e<l-1;e++)for(let s=0;s<l-1;s++){const c=this.costGrid[e][s],p=this.costGrid[e+1][s],x=this.costGrid[e][s+1],u=this.costGrid[e+1][s+1];if([c<a&&p>=a||c>=a&&p<a,p<a&&u>=a||p>=a&&u<a,u<a&&x>=a||u>=a&&x<a,x<a&&c>=a||x>=a&&c<a].some((t=>t))){const a=i+(n-i)*(e+.5)/(l-1),c=h+(o-h)*(s+.5)/(l-1);t.beginPath(),t.arc(r(a),d(c),1,0,2*Math.PI),t.fill()}}}}if(this.state.history.length>1){t.strokeStyle="rgba(255, 255, 0, 0.8)",t.lineWidth=2,t.beginPath();for(let e=0;e<this.state.history.length;e++){const{alpha:a,beta:s}=this.state.history[e];0===e?t.moveTo(r(a),d(s)):t.lineTo(r(a),d(s))}t.stroke(),t.fillStyle="rgba(255, 255, 0, 0.6)";for(let e=0;e<this.state.history.length-1;e++){const{alpha:a,beta:s}=this.state.history[e];t.beginPath(),t.arc(r(a),d(s),3,0,2*Math.PI),t.fill()}}t.fillStyle="#ff0000",t.strokeStyle="#ffffff",t.lineWidth=2,t.beginPath(),t.arc(r(this.state.alpha),d(this.state.beta),6,0,2*Math.PI),t.fill(),t.stroke(),t.fillStyle="#666",t.font="10px Arial";for(let e=0;e<=5;e++){const l=i+e*(n-i)/5,c=h+e*(o-h)/5;t.textAlign="center",t.fillText(l.toFixed(1),r(l),a-s+15),t.textAlign="right",t.fillText(c.toFixed(1),35,d(c)+3)}}}document.addEventListener("DOMContentLoaded",(()=>{new GradientDescentDemo}));