class AttentionDemo{constructor(){this.sequenceSelect=document.getElementById("sequence-select"),this.randomizeWeightsBtn=document.getElementById("randomize-weights-btn"),this.qCanvas=document.getElementById("q-canvas"),this.kCanvas=document.getElementById("k-canvas"),this.vCanvas=document.getElementById("v-canvas"),this.attentionCanvas=document.getElementById("attention-canvas"),this.vAttentionCanvas=document.getElementById("v-attention-canvas"),this.inputSequenceContainer=document.getElementById("input-sequence"),this.outputSequenceContainer=document.getElementById("output-sequence"),this.sequences={simple:["The","cat","sat"],greeting:["Hello","world","today"],question:["What","is","attention"],longer:["The","quick","brown","fox","jumps"]},this.currentSequence=[],this.hoveredToken=null,this.hoveredOutputEmbedding=null,this.dModel=4,this.dK=4,this.seqLength=0,this.inputEmbeddings=[],this.WQ=[],this.WK=[],this.WV=[],this.Q=[],this.K=[],this.V=[],this.scores=[],this.attentionWeights=[],this.output=[],this.setupEventListeners(),this.initializeDemo()}setupEventListeners(){this.sequenceSelect.addEventListener("change",(t=>{this.loadSequence(t.target.value)})),this.randomizeWeightsBtn.addEventListener("click",(()=>this.randomizeWeights())),this.inputSequenceContainer.addEventListener("mouseover",(t=>{const e=t.target.closest(".token");e&&(this.hoveredToken=parseInt(e.dataset.index),this.renderQKVMatrices())})),this.inputSequenceContainer.addEventListener("mouseleave",(()=>{this.hoveredToken=null,this.renderQKVMatrices()}))}initializeDemo(){this.loadSequence("simple")}loadSequence(t){this.currentSequence=[...this.sequences[t]],this.seqLength=this.currentSequence.length,this.initializeEmbeddings(),this.initializeWeights(),this.computeAllStages()}initializeEmbeddings(){this.inputEmbeddings=[];for(let t=0;t<this.seqLength;t++){const t=[];for(let e=0;e<this.dModel;e++)t.push(2*(Math.random()-.5));this.inputEmbeddings.push(t)}}initializeWeights(){this.WQ=this.createRandomMatrix(this.dModel,this.dK),this.WK=this.createRandomMatrix(this.dModel,this.dK),this.WV=this.createRandomMatrix(this.dModel,this.dModel)}createRandomMatrix(t,e){const n=[];for(let i=0;i<t;i++){const i=[];for(let n=0;n<e;n++)i.push(2*(Math.random()-.5)/Math.sqrt(t));n.push(i)}return n}randomizeWeights(){this.initializeWeights(),this.computeAllStages()}matrixMultiply(t,e){const n=t.length,i=e[0].length,s=e.length,h=[];for(let o=0;o<n;o++){const n=[];for(let h=0;h<i;h++){let i=0;for(let n=0;n<s;n++)i+=t[o][n]*e[n][h];n.push(i)}h.push(n)}return h}transpose(t){const e=t.length,n=t[0].length,i=[];for(let s=0;s<n;s++){const n=[];for(let i=0;i<e;i++)n.push(t[i][s]);i.push(n)}return i}softmax(t){const e=[];for(let n=0;n<t.length;n++){const i=[...t[n]],s=Math.max(...i),h=i.map((t=>t-s)).map((t=>Math.exp(t))),o=h.reduce(((t,e)=>t+e),0);e.push(h.map((t=>t/o)))}return e}computeQKV(){this.Q=this.matrixMultiply(this.inputEmbeddings,this.WQ),this.K=this.matrixMultiply(this.inputEmbeddings,this.WK),this.V=this.matrixMultiply(this.inputEmbeddings,this.WV)}computeScores(){const t=this.transpose(this.K),e=this.matrixMultiply(this.Q,t),n=1/Math.sqrt(this.dK);this.scores=e.map(((t,e)=>t.map(((t,i)=>i<=e?t*n:-1/0))))}computeAttentionWeights(){this.attentionWeights=this.softmax(this.scores)}computeOutput(){this.output=this.matrixMultiply(this.attentionWeights,this.V)}computeAllStages(){this.computeQKV(),this.computeScores(),this.computeAttentionWeights(),this.computeOutput(),this.renderAll()}renderAll(){this.renderInputSequence(),this.renderQKVMatrices(),this.renderAttentionWeights(),this.renderOutput()}renderInputSequence(){this.inputSequenceContainer.innerHTML="",this.currentSequence.forEach(((t,e)=>{const n=document.createElement("div");n.className="token",n.dataset.index=e;const i=document.createElement("div");i.className="token-text",i.textContent=t;const s=document.createElement("div");if(s.className="token-embedding",this.inputEmbeddings[e]){const t=this.inputEmbeddings[e].map((t=>t.toFixed(2))).join(", ");s.textContent=`[${t}]`}n.appendChild(i),n.appendChild(s),this.inputSequenceContainer.appendChild(n)}))}renderQKVMatrices(){this.renderMatrix(this.qCanvas,this.Q,"Query"),this.renderMatrix(this.kCanvas,this.K,"Key"),this.renderMatrix(this.vCanvas,this.V,"Value")}renderMatrix(t,e,n){const i=t.getContext("2d"),s=t.width,h=t.height;if(i.clearRect(0,0,s,h),!e||0===e.length)return;const o=e.length,d=e[0].length,a=s/d,l=Math.min(46,(h-40)/o),r=(h-l*o)/2,u=e.flat(),c=Math.min(...u),m=Math.max(...u)-c;for(let t=0;t<o;t++)for(let s=0;s<d;s++){const h=e[t][s],o=0===m?.5:(h-c)/m;let d,u=.3+.7*o;this.hoveredToken===t&&(u=Math.min(1,u+.3)),this.hoveredOutputEmbedding&&"Value"===n&&s===this.hoveredOutputEmbedding.embeddingIndex&&t<=this.hoveredOutputEmbedding.tokenIndex&&(u=Math.min(1,u+.3)),d="Query"===n?`rgba(74, 144, 226, ${u})`:"Key"===n?`rgba(124, 179, 66, ${u})`:`rgba(244, 67, 54, ${u})`,i.fillStyle=d,i.fillRect(s*a,r+t*l,a,l),this.hoveredToken===t||this.hoveredOutputEmbedding&&"Value"===n&&s===this.hoveredOutputEmbedding.embeddingIndex&&t<=this.hoveredOutputEmbedding.tokenIndex?(i.strokeStyle="#333",i.lineWidth=2):(i.strokeStyle="#ddd",i.lineWidth=1),i.strokeRect(s*a,r+t*l,a,l),a>25&&l>15&&(i.fillStyle=o>.5?"white":"black",i.font="14px monospace",i.textAlign="center",i.textBaseline="middle",i.fillText(h.toFixed(2),s*a+a/2,r+t*l+l/2))}}renderAttentionWeights(){this.renderHeatmap(this.attentionCanvas,this.attentionWeights,"Attention Weights"),this.renderMatrix(this.vAttentionCanvas,this.V,"Value")}renderHeatmap(t,e,n){const i=t.getContext("2d"),s=t.width,h=t.height;if(i.clearRect(0,0,s,h),!e||0===e.length)return;const o=e.length,d=s-50,a=h-40,l=Math.min(d,a)/o,r=50+(d-l*o)/2,u=40+(a-l*o)/2,c=e.flat(),m=Math.min(...c),p=Math.max(...c)-m;for(let t=0;t<o;t++)for(let n=0;n<o;n++){const s=e[t][n];if(0===s&&n>t)i.fillStyle="#e0e0e0";else{let e=0===p?.5:(s-m)/p,h=.3+.7*e;this.hoveredOutputEmbedding&&t===this.hoveredOutputEmbedding.tokenIndex&&n<=t&&(h=Math.min(1,h+.3)),i.fillStyle=`rgba(255, ${255-200*e}, ${255-255*e}, ${h})`}if(i.fillRect(r+n*l,u+t*l,l,l),!this.hoveredOutputEmbedding||t!==this.hoveredOutputEmbedding.tokenIndex||0===s&&n>t?(i.strokeStyle="#666",i.lineWidth=1):(i.strokeStyle="#333",i.lineWidth=2),i.strokeRect(r+n*l,u+t*l,l,l),l>30)if(0===s&&n>t)i.fillStyle="#999",i.font="14px monospace",i.textAlign="center",i.textBaseline="middle",i.fillText("Ã—",r+n*l+l/2,u+t*l+l/2);else{const e=0===p?.5:(s-m)/p;i.fillStyle=e>.6?"white":"black",i.font="14px monospace",i.textAlign="center",i.textBaseline="middle",i.fillText(s.toFixed(3),r+n*l+l/2,u+t*l+l/2)}}i.fillStyle="#333",i.font="12px sans-serif",i.textAlign="center";for(let t=0;t<o;t++)i.fillText(this.currentSequence[t],r+t*l+l/2,u-5);i.textAlign="right",i.textBaseline="middle";for(let t=0;t<o;t++)i.fillText(this.currentSequence[t],r-5,u+t*l+l/2)}renderOutput(){this.outputSequenceContainer.innerHTML="",this.currentSequence.forEach(((t,e)=>{const n=document.createElement("div");n.className="token";const i=document.createElement("div");i.className="token-text",i.textContent=t;const s=document.createElement("div");s.style.display="flex",s.style.marginTop="5px",s.style.justifyContent="space-between",s.style.width="100%",this.output[e]&&this.output[e].forEach(((t,n)=>{const i=document.createElement("div");i.style.width="60px",i.style.height="30px",i.style.display="flex",i.style.alignItems="center",i.style.justifyContent="center",i.style.fontSize="14px",i.style.fontFamily="monospace",i.style.border="1px solid #ccc",i.style.borderRadius="3px",i.style.cursor="pointer",i.style.transition="all 0.2s ease";const h=this.output[e],o=Math.min(...h),d=Math.max(...h)-o,a=.3+.7*(0===d?.5:(t-o)/d);i.style.backgroundColor=`rgba(77, 190, 238, ${a})`,i.textContent=t.toFixed(2),i.addEventListener("mouseenter",(()=>{i.style.transform="scale(1.1)",i.style.zIndex="10",i.style.boxShadow="0 2px 8px rgba(0,0,0,0.3)",this.hoveredOutputEmbedding={tokenIndex:e,embeddingIndex:n},this.renderAttentionWeights()})),i.addEventListener("mouseleave",(()=>{i.style.transform="scale(1)",i.style.zIndex="1",i.style.boxShadow="none",this.hoveredOutputEmbedding=null,this.renderAttentionWeights()})),s.appendChild(i)})),n.appendChild(i),n.appendChild(s),this.outputSequenceContainer.appendChild(n)}))}}document.addEventListener("DOMContentLoaded",(()=>{new AttentionDemo}));